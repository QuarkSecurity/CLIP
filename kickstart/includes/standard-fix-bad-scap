# We have three approaches here:
# 1. don't fix things that are broken - obviously the wrong choice in general
# 2. fix it by shipping a custom profile that disables the broken stuff
# which is bad b/c then we're carrying custom profiles
# 3. fix it for now and wait until the tools make it easier to disable 
# individual checks and remedidation:
# https://github.com/OpenSCAP/openscap/issues/633
# We'll go with #3 and wait for the tools to catch up

systemctl disable kdump

# https://github.com/OpenSCAP/scap-security-guide/issues/1435
sed -i -e 's/cbcMACs/cbc\nMACS/' /etc/ssh/sshd_config 

# And I have yet to figure out how to use SECMARK with firewalld.
systemctl mask firewalld
systemctl enable iptables
systemctl enable ip6tables

# add missing audit rules
cat <<EOF >>/etc/audit/audit.rules
-a always,exit -F arch=b32 -S creat,open,openat,open_by_handle_at,truncate,ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -F key=access
-a always,exit -F arch=b32 -S creat,open,openat,open_by_handle_at,truncate,ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -F key=access
-a always,exit -F arch=b64 -S creat,open,openat,open_by_handle_at,truncate,ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -F key=access
-a always,exit -F arch=b64 -S creat,open,openat,open_by_handle_at,truncate,ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -F key=access
EOF
cat <<EOF >>/etc/audit/rules.d/failed-file-mod.rules
-a always,exit -F arch=b32 -S creat,open,openat,open_by_handle_at,truncate,ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -F key=access
-a always,exit -F arch=b32 -S creat,open,openat,open_by_handle_at,truncate,ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -F key=access
-a always,exit -F arch=b64 -S creat,open,openat,open_by_handle_at,truncate,ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -F key=access
-a always,exit -F arch=b64 -S creat,open,openat,open_by_handle_at,truncate,ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -F key=access
EOF

# SSG that ships in RHEL 7.5 for auditd had loose regexs and was catching more than it should.
# which led to space_left <= admin_space_left which prevents auditd from starting.
# content was producing dupe
# space_left entries and failed to set action vars
sed -i '/^admin_space_left.*=.*$/d' /etc/audit/auditd.conf
sed -i '/^space_left.*=.*$/d' /etc/audit/auditd.conf

cat <<EOF >> /etc/audit/auditd.conf
space_left = 75
space_left_action = email
admin_space_left = 50
admin_space_left_action = single
EOF

if [ -f /etc/default/grub ]; then
	# re-enable USB
	sed -i "s/nousb//g" /etc/default/grub
	grubby --update-kernel=ALL --remove-args=nousb


	# SSG content fails to snag the right device hosting /boot
	# which causes panics on boot when fips is enabled
	BOOT_DEV=$(df --output=source /boot/ | tail -1)
	BOOT_DEV=$(lsblk -no UUID ${BOOT_DEV})

	/sbin/grubby --update-kernel=ALL --remove-args="boot"
	/sbin/grubby --update-kernel=ALL --args="boot=UUID=${BOOT_DEV}"
	if grep -q '^GRUB_CMDLINE_LINUX=".*boot=.*"' /etc/default/grub; then
		sed -i 's|\(^GRUB_CMDLINE_LINUX=.*\)boot=[^[:space:]]*\(.*\)"|\1 boot=UUID='"${BOOT_DEV}"' \2|' /etc/default/grub
	else
		sed -i 's|\(^GRUB_CMDLINE_LINUX=.*\)"|\1 boot=UUID='"${BOOT_DEV}"'"|' /etc/default/grub
	fi
fi
